import parse_logic
import links
import bot_config

import telebot
import os, shutil, traceback
import glob
import re
import time

# –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ —Ç–≥ –±–æ—Ç–∞
# okpd - –û–ö–ü–î2
# orgs - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∑–∞–∫–∞–∑—á–∏–∫–∏
# add - –¥–æ–±–∞–≤–∏—Ç—å –û–ö–ü–î –∏–ª–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞
# data - –≤—ã–≥—Ä—É–∑–∏—Ç—å –∑–Ω–∞–Ω–∏—è –±–æ—Ç–∞
# about - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–∞ –æ –±–æ—Ç–µ

# no - –∏—Å–∫–ª—é—á–∏—Ç—å –ì–ö –∏–∑ –æ—Ç—á–µ—Ç–∞ # –Ω–µ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è —Ñ–∏—á–∞


bot = telebot.TeleBot(bot_config.token)

@bot.message_handler(commands=['start'])
def send_start_message(message):
	msg = """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ë–æ—Ç!\n\n–ê–≤—Ç–æ—Ä - @kirillchechin"""
	print(f"/start by id {message.from_user.id}, Name {message.from_user.first_name} {message.from_user.last_name}, username {message.from_user.username}")
	bot.send_message(message.chat.id, msg)

# –ò–ù—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –û–ö–ü–î
@bot.message_handler(commands=["okpd"])
def okpd(message):
	try:
		count = links.okpd_count()
		msg = f"""–°–æ–±–∏—Ä–∞—é —Ç–µ–Ω–¥–µ—Ä—ã –ø–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–º –û–ö–ü–î ({count} —à—Ç.)"""
		bot.reply_to(message, msg)
		src = parse_logic.report_okpd()
		doc = open(file=src,mode='rb')
		bot.send_document(message.chat.id, doc)
		# bot.reply_to(message, f"[s](google.com)", parse_mode="MarkdownV2")
		bot.reply_to(message, f"<a href='{links.all_okpd()}'>–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</a>", parse_mode='HTML')
	except Exception as e:
		err_msg = f"{message.from_user}:{message.text}"+traceback.format_exc()
		print(err_msg)
		bot.reply_to(message, "–û—à–∏–±–∫–∞ –±–æ—Ç–∞, –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ @kirillchechin: \n"+str(err_msg))

# –ù–ï –∏—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –û–ö–ü–î
@bot.message_handler(commands=["no"])
def no(message):
	nos = re.findall(r'[0-9]{11,19}', message.text)
	try:
		msg = f"""–ü–æ–º–µ—á–∞—é –∑–∞–∫–∞–∑—ã –∫–∞–∫ –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã–µ ({len(nos)} —à—Ç.)"""
		bot.reply_to(message, msg)
		for i in nos:
			i = int(i)
			sucsess = links.log_tender_stale(i)
			if not sucsess:
				bot.reply_to(message, f"–Ω–µ —É–¥–∞–ª–æ—Å—å –≤–Ω–µ—Å—Ç–∏ –≤–Ω–µ—Å—Ç–∏ –≤ –Ω–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ: {i}")
	except Exception as e:
		err_msg = f"{message.from_user}:{message.text}"+traceback.format_exc()
		print(err_msg)
		bot.reply_to(message, "–û—à–∏–±–∫–∞ –±–æ—Ç–∞, –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ @kirillchechin: \n"+str(err_msg))

# –í–∞–∂–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏
@bot.message_handler(commands=["orgs"])
def vips(message):
	try:
		count = links.vip_count()
		msg = f"""–°–æ–±–∏—Ä–∞—é —Ç–µ–Ω–¥–µ—Ä—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∑–∞–∫–∞–∑—á–∏–∫–æ–≤ ({count} —à—Ç.)"""
		bot.reply_to(message, msg)
		src = parse_logic.report_orgs()
		doc = open(file=src,mode='rb')
		bot.send_document(message.chat.id, doc)
	except Exception as e:
		err_msg = f"{message.from_user}:{message.text}"+traceback.format_exc()
		print(err_msg)
		bot.reply_to(message, "–û—à–∏–±–∫–∞ –±–æ—Ç–∞, –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ @kirillchechin: \n"+str(err_msg))

# –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–ø–ª–æ–≥–æ –∑–∞–∫–∞–∑—á–∏–∫–∞ –∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –û–ö–ü–î
@bot.message_handler(commands=["add"])
def add(message):
	if  "customerIdOrg=" in message.text:
		result = links.extract_add_orgs(message.text)
		msg = "–î–æ–±–∞–≤–ª–µ–Ω—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ —Å—Å—ã–ª–∫–∏:" + "\n".join(result)
		bot.reply_to(message, msg)

	if "okpd2Ids=" in message.text:
		result = links.extract_add_okpd(message.text)
		msg = "–î–æ–±–∞–≤–ª–µ–Ω—ã –û–ö–ü–î –∏–∑ —Å—Å—ã–ª–∫–∏:" + "\n\t".join(result)
		bot.reply_to(message, msg)

	else:
		msg = "–ß—Ç–æ –±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–ø–ª–æ–≥–æ –∑–∞–∫–∞–∑—á–∏–∫–∞ –∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –û–ö–ü–î, –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –ø–æ –æ–∫–ø–¥ –∏–ª–∏ –ø–æ –∑–∞–∫–∞–∑–∏—á–∫—É."
		bot.reply_to(message, msg)

# –í—ã–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ —á–∞—Ç
@bot.message_handler(commands=["show","data"])
def data(message):
	with open(file="tender_info.db",mode='rb') as doc:
		bot.send_document(message.chat.id, doc)
	msg = "–í —Ñ–∞–π–ª–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–ø–ª—ã—Ö –∑–∞–∫–∞–∑—á–∏–∫–∞—Ö –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –û–ö–ü–î. –¢–∞–∫ –∂–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –∏—Å—Ç–æ—Ä–∏—è —Ç–µ–Ω–¥–µ—Ä–æ–≤ –ø–æ–ø–∞–≤—à–∏—Ö –≤ –æ—Ç—á–µ—Ç—ã.\n –ú–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –ø—Ä–æ–≥—Ä–∞–º–º–æ–π SQLiteStudio \n[|–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è|](https://progtips.ru/bazy-dannyx/menedzher-baz-dannyx-sqlitestudio.html)\n[|–°–∫–∞—á–∏–≤–∞–Ω–∏–µ SQLiteStudio|](https://sqlitestudio.pl/)"
	bot.reply_to(message, msg, parse_mode='Markdown',disable_web_page_preview=True)

# –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–∞ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –Ω–µ–∑–≤–∞–∏—Å–∏–º–æ–π –¥–∞–ª—å–Ω–µ–π—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
@bot.message_handler(commands=["about"])
def info(message):
	with open(file="README.md",mode='r', encoding='utf-8') as file:
		msg = file.read()
		msg = msg.replace("#","üîµ")
		bot.reply_to(message, msg, parse_mode='Markdown', disable_web_page_preview=True)

if __name__ == '__main__':
	links.init_database(links.db_name)
	print("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç \n",os.getcwd())
	bot.infinity_polling()